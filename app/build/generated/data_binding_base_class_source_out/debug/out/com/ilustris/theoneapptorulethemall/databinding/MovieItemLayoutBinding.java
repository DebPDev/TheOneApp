// Generated by view binder compiler. Do not edit!
package com.ilustris.theoneapptorulethemall.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ilustris.theoneapptorulethemall.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MovieItemLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView movieCover;

  @NonNull
  public final TextView movieDescription;

  @NonNull
  public final TextView movieName;

  @NonNull
  public final TextView textWithIcon;

  private MovieItemLayoutBinding(@NonNull CardView rootView, @NonNull ImageView movieCover,
      @NonNull TextView movieDescription, @NonNull TextView movieName,
      @NonNull TextView textWithIcon) {
    this.rootView = rootView;
    this.movieCover = movieCover;
    this.movieDescription = movieDescription;
    this.movieName = movieName;
    this.textWithIcon = textWithIcon;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MovieItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MovieItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.movie_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MovieItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.movieCover;
      ImageView movieCover = ViewBindings.findChildViewById(rootView, id);
      if (movieCover == null) {
        break missingId;
      }

      id = R.id.movieDescription;
      TextView movieDescription = ViewBindings.findChildViewById(rootView, id);
      if (movieDescription == null) {
        break missingId;
      }

      id = R.id.movieName;
      TextView movieName = ViewBindings.findChildViewById(rootView, id);
      if (movieName == null) {
        break missingId;
      }

      id = R.id.textWithIcon;
      TextView textWithIcon = ViewBindings.findChildViewById(rootView, id);
      if (textWithIcon == null) {
        break missingId;
      }

      return new MovieItemLayoutBinding((CardView) rootView, movieCover, movieDescription,
          movieName, textWithIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
